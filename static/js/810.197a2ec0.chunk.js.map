{"version":3,"file":"static/js/810.197a2ec0.chunk.js","mappings":"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","sources":["Pages/ConfirmedOrerPage.jsx","components/GlobalStyles.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/ShopsCollection/ShopsCollection.styled.jsx","components/ShopsCollection/ShopsCollection.jsx","components/ShopProducts/ShopProducts.styled.jsx","components/ShopProducts/ShopProducts.jsx","components/OrderProducts/OrderProducts.styled.jsx","components/OrderProducts/OrderProducts.jsx","components/TotalResult/TotalResult.style.jsx","components/TotalResult/TotalResult.jsx","components/ConfirmedOrder/ConfirmedOrder.styled.jsx","components/ConfirmedOrder/ConfirmedOrder.jsx"],"sourcesContent":["import { ConfirmedOrder } from \"components\"\n\n\nexport default function ConfirmedOrerPage ({setOrder}) {\n\n\n    return (\n        <>\n            <ConfirmedOrder setOrder={setOrder}/>\n        </>\n    )\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n    padding: 30px 0;\n    background-color: #DADEDB;\n    max-width: 1400px;\n`;\nexport const Container = styled.div`\n    margin: 0 auto;\n    max-width: 1100px;\n    display: flex;\n    position: relative;\n`;\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n`;\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    padding: 10px 0 20px 0;\n    background-color: #000;\n    \n`;\nexport const NavigationList = styled.ul`\n    display: flex;\n    width: 180px;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const NavigationItem = styled.li`\n    font-weight: 600;\n`;\nexport const NavigationDelimeter = styled.div`\n    height: 20px;\n    width: 1px;\n    background-color: white;\n    border: none;\n    position: absolute;\n    top: 0;\n    left: 55px;\n`;","import { HeaderStyled, NavigationList, NavigationItem, NavigationDelimeter } from \"./Header.styled\";\nimport { StyledLink, Container } from \"components\"\nexport const Header = () => {\n   return (\n    <>\n        <HeaderStyled>\n            <Container>\n                <nav>\n                    <NavigationList>\n\n                        <NavigationItem>\n                            <StyledLink to=\"/\">Shop</StyledLink>\n                        </NavigationItem>\n\n                        <NavigationItem>\n                            <StyledLink to=\"order\">Shopping Cart</StyledLink>\n                        </NavigationItem>\n                        \n                    </NavigationList>\n                    \n                    <NavigationDelimeter/>\n                </nav>\n            </Container>\n        </HeaderStyled>\n    </>\n   ) \n};","import styled from '@emotion/styled';\n\nexport const ShopList = styled.ul`\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid black;\n    margin-right: 30px;\n`;\nexport const ShopListItem = styled.li`\n    margin-bottom: 30px;\n`;\n\nexport const ShopButton = styled.button`\n    width: 200px;\n    height: 50px;\n    border-radius: 7px;\n    background: white;\n    border: none;\n    &:hover {\n        background: #C8C4C5;\n    }\n`;","import { ShopButton, ShopListItem, ShopList } from \"./ShopsCollection.styled\";\n\n\nexport const ShopsCollection = ({storesData, setCurrentShop}) => {\n\nfunction onSelectedShop (event) {\n    const selectedShop = event.target.dataset.currentshop\n    setCurrentShop(selectedShop)\n}\n\n\n\n    return (\n\n            <ShopList>\n                {storesData !== null && storesData.map(item => {\n                    return (\n                        <ShopListItem key={item.shop}>\n                            <ShopButton type=\"button\" data-currentshop={item.shop} onClick={onSelectedShop}>{item.shop}</ShopButton>\n                        </ShopListItem>\n                    )\n                })}\n            </ShopList>\n\n    )\n}\n\n","import styled from '@emotion/styled';\nimport mainImg from '../../img/main-background.jpg';\n\nexport const ShopProductsWrapper = styled.div`\n    width: 100%;\n    height: 80vh;\n    background-image: url('http://localhost:3001//${props => props.image}');\n    border-radius: 10px;\n\n`;\nexport const SplashScreen = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-image: linear-gradient(rgba(0, 16, 56, 0.45), rgba(0, 16, 56, 0.45)), url('${mainImg}');\n    overflow: hidden;\n    border-radius: 10px;\n`;\nexport const ProductsLisWrapper = styled.div`\nbox-sizing: border-box;\nheight: 100%;\noverflow-y: scroll;\npadding: 10px;\n`;\nexport const ProductsList = styled.ul`\n    padding-left: 35px;\n    padding-right: 35px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    \n`;\n\nexport const ProductsItem = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n    margin-bottom: 20px;\n`;\nexport const Description = styled.div`\n    padding: 0 10px 10px 10px;\n   display: flex;\n   justify-content: space-between;\n   background-color: rgba(255, 255, 255, 0.8);\n`;\nexport const TextWrapper = styled.div`\n   display: flex;\n   margin-top: 10px;\n`;\nexport const OrderButton = styled.button`\n    width: 100px;\n    height: 35px;\n    background: rgb(227, 6, 19);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    border-radius: 5px;\n    border: none;\n    margin-top: 30px;\n`;\nexport const MealPrice = styled.span`\n    margin-left: 10px;\n    font-weight: 700;\n`;","import { SplashScreen, ShopProductsWrapper, ProductsLisWrapper, ProductsList, ProductsItem, OrderButton, Description, TextWrapper, MealPrice  } from \"./ShopProducts.styled\"\n\nexport const ShopProducts = ({productionData, orderCreator}) => {\n\n\n\n    return (\n        <ShopProductsWrapper image={productionData !== null && productionData.wallpaper}>\n            {productionData === null && <SplashScreen>\n                <h1>\n                    Select a store <br/>and view <br/>the list of its products\n                </h1>\n            </SplashScreen>}\n            {productionData !== null && \n            <ProductsLisWrapper>\n                <ProductsList>\n                    {\n                        productionData.products.map(({name, price, image, id}) => {\n                            return (\n                                <ProductsItem key={id}>\n                                    <img className=\"meal-image\" src={`http://localhost:3001//${image}`} alt=\"fast-food\" width=\"340\" height=\"220\"/>\n\n                                    <Description>\n                                        <TextWrapper>\n                                            <p className=\"meal-title\">{name}</p>\n                                            <MealPrice className=\"meal-price\">{price}$</MealPrice>\n                                        </TextWrapper>\n                                        <OrderButton onClick={() => {\n                                   \n                                            orderCreator({id, shop: productionData.shop, name, price, imageUrl: image})\n\n                                        }}>Add to card</OrderButton>\n                                    </Description>\n                                    \n                                </ProductsItem>\n                            )\n                        })\n                    }\n                </ProductsList>\n            </ProductsLisWrapper>}\n        </ShopProductsWrapper>\n        \n    )\n}","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\n\nexport const OrderList = styled.ul`\n    width: 100%;\n    background: #fff;\n    margin-left: 30px;\n    border: 1px solid black;\n    border-radius: 10px;\n    height: 70vh;\n    overflow-y: scroll;\n    padding: 10px;\n`;\nexport const OrderListItem = styled.li`\n    padding: 10px 0 20px 10px;\n    display: flex;\n    border: 1px solid black;\n    border-radius: 10px;\n    margin-bottom: 10px;\n    justify-content: space-between;\n    align-items: flex-end;\n    background-color: white;\n`;\nexport const DescritionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n`;\nexport const ItemOrderTittle = styled.span`\n\n`;\nexport const ItemOrderCount = styled.span`\n    margin-top: 10px;\n`;\nexport const ItemOrderPrice = styled.span`\n    margin-top: 10px;\n`;\n\nexport const ValueInputWrapper = styled.div`\n    margin-top: 100px;\n    margin-right: 20px;\n    position: relative;\n`;\nexport const ValueInput = styled(Field)`\n    width: 100px;\n    height: 25px;\n    border: none;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    border: 1px solid black;\n`;\n\nexport const ValueInputButtonSet = styled.div`\n    //border: 1px solid black;\n    width: 90px;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    position: absolute;\n    top: 5px;\n    left: 8px;\n`;\nexport const ValueInputButton = styled.button`\n    width: 28px;\n    height: 18px;\n    border: none;\n    border-radius: 5px;\n    background: ${props => props.appointment === \"decrement\" ? \"rgb(227, 6, 19)\" : \"green\"};\n`;\nexport const RemoveItemBtn = styled.button`\n    border: none;\n    font-weight: bolder;\n    background: none;\n    color: rgb(227, 6, 19);\n    position: absolute;\n    top: -200px;\n    right: -10px;\n    transition: color 500ms ease;\n    &:hover {\n        color: rgb(168, 5, 14);\n    }\n`;","import { OrderList, RemoveItemBtn, OrderListItem, DescritionWrapper, ItemOrderTittle, ItemOrderPrice, ValueInputWrapper, ValueInput, ValueInputButtonSet, ValueInputButton} from \"./OrderProducts.styled\"\n\nexport const OrderProducts = ({order, setOrder, onOrderInputChange}) => {\n\n\n    return (\n        <>\n            \n            <OrderList>\n                {order && order.map(item => {\n                    return(\n                        <OrderListItem key={item.id}>\n                            \n                            <img src={`http://localhost:3001//${item.imageUrl}`} alt=\"fast-food\" width=\"340\" height=\"220\"/>\n                            <DescritionWrapper>\n                                <ItemOrderTittle>{item.name}</ItemOrderTittle>\n                                <ItemOrderPrice>Price: {item.totalPrice}$</ItemOrderPrice>\n                                <ValueInputWrapper>\n                                    <ValueInput \n                                        type=\"text\" \n                                        name={item.id} \n                                        value={item.count}\n                                    >\n                                        \n                                    </ValueInput>\n                                    <ValueInputButtonSet>\n                                        <ValueInputButton type=\"button\" appointment=\"increment\" onClick={() => {\n                                            onOrderInputChange(\"increment\", item.id)\n                                        }}>+</ValueInputButton>\n                                        {item.count > 1 && <ValueInputButton type=\"button\" appointment=\"decrement\" onClick={() => {\n                                            onOrderInputChange(\"decrement\", item.id)\n                                        }}>-</ValueInputButton>}\n                                        <RemoveItemBtn type=\"button\" onClick={() => {\n                                setOrder(order.filter(itemInOrder => itemInOrder.id !== item.id))\n                            }}>Remove</RemoveItemBtn>\n                                    </ValueInputButtonSet>\n                                    \n                                </ValueInputWrapper>\n                                \n                            </DescritionWrapper>\n                        </OrderListItem>\n                    )\n                })}\n            </OrderList>\n            \n        </>\n    )\n}","import styled from '@emotion/styled';\n\nexport const TotalResultWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 10px;\n`;\nexport const ConfirmOrderButton = styled.button`\n    margin-left: 30px;\n    width: 150px;\n    height: 40px;\n    border: none;\n    border-radius: 5px;\n    background: rgb(227, 6, 19);\n    transition: background 500ms ease;\n    transition: color 500ms ease;\n    &:hover {\n        background: rgb(168, 5, 14);\n        color: white;\n    }\n`;","import {TotalResultWrapper, ConfirmOrderButton} from \"./TotalResult.style\"\n\nexport const TotalResult = ({total}) => {\n   \n    return (\n        <TotalResultWrapper>\n            <p>Total price: {total}$</p>\n            <ConfirmOrderButton type=\"submit\">Submit</ConfirmOrderButton>\n        </TotalResultWrapper>\n    )\n}","import styled from '@emotion/styled';\nimport confirmImg from \"../../img/acess-icon.png\"\n\n\nexport const ConfirmedOrderWrapper = styled.div`\n    width: 100%;\n    padding: 50px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-image: url('${confirmImg}');\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n\n`;\nexport const ConfirmedTittle = styled.h2`\n    margin-bottom: 50px;\n`;\nexport const ConfirmedTextWrapper = styled.div`\n    display: flex;\n    width: 500px;\n    margin-bottom: 40px;\n`;\nexport const RelocationButton = styled.button`\n    border: none;\n    background: none;\n    font-weight: bolder;\n`;","import { ConfirmedOrderWrapper, ConfirmedTittle, ConfirmedTextWrapper, RelocationButton } from \"./ConfirmedOrder.styled\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const ConfirmedOrder = () => {\nconst navigate = useNavigate();\n\n\n\n\n\n    return (\n        <ConfirmedOrderWrapper>\n            <ConfirmedTittle>Your order is accepted</ConfirmedTittle>\n            <ConfirmedTextWrapper>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias qui vel provident quisquam voluptas ex similique quia animi, aliquam ab a atque consectetur est ratione? Veniam, error nobis. Quae, laboriosam.\n            </ConfirmedTextWrapper>\n            <RelocationButton onClick={() => {\n                navigate(\"/\")\n            }}>Go to home page</RelocationButton>\n        </ConfirmedOrderWrapper>\n    )\n}"],"names":["ConfirmedOrerPage","setOrder","Section","styled","Container","StyledLink","Link","HeaderStyled","NavigationList","NavigationItem","NavigationDelimeter","Header","to","ShopList","ShopListItem","ShopButton","ShopsCollection","storesData","setCurrentShop","onSelectedShop","event","selectedShop","target","dataset","currentshop","map","item","type","shop","onClick","ShopProductsWrapper","props","image","SplashScreen","mainImg","ProductsLisWrapper","ProductsList","ProductsItem","Description","TextWrapper","OrderButton","MealPrice","ShopProducts","productionData","orderCreator","wallpaper","products","name","price","id","className","src","alt","width","height","imageUrl","OrderList","OrderListItem","DescritionWrapper","ItemOrderTittle","ItemOrderPrice","ValueInputWrapper","ValueInput","Field","ValueInputButtonSet","ValueInputButton","appointment","RemoveItemBtn","OrderProducts","order","onOrderInputChange","totalPrice","value","count","filter","itemInOrder","TotalResultWrapper","ConfirmOrderButton","TotalResult","total","ConfirmedOrderWrapper","confirmImg","ConfirmedTittle","ConfirmedTextWrapper","RelocationButton","ConfirmedOrder","navigate","useNavigate"],"sourceRoot":""}
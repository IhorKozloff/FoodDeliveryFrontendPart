{"version":3,"file":"static/js/643.a7381329.chunk.js","mappings":"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","sources":["Pages/OrderPage/OrderPage.styled.jsx","API/OrdersAPI.js","Pages/OrderPage/OrderPage.jsx","components/GlobalStyles.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/ShopsCollection/ShopsCollection.styled.jsx","components/ShopsCollection/ShopsCollection.jsx","components/ShopProducts/ShopProducts.styled.jsx","components/ShopProducts/ShopProducts.jsx","components/OrderProducts/OrderProducts.styled.jsx","components/OrderProducts/OrderProducts.jsx","components/TotalResult/TotalResult.style.jsx","components/TotalResult/TotalResult.jsx","components/ConfirmedOrder/ConfirmedOrder.styled.jsx","components/ConfirmedOrder/ConfirmedOrder.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form, Field } from \"formik\";\n\nexport const StyledForm = styled(Form)`\n    display: block;\n    width: 100%;\n`;\n\nexport const UserDataWrapper = styled.div`\n    width: 80%;\n    display: flex;\n    flex-direction: column;\n    border: 1px solid black;\n    border-radius: 10px;\n    padding: 30px 60px 20px 20px;\n    justify-content: space-around;\n    background-color: #fff;\n`\nexport const StyledInput = styled(Field)`\n    width: 100%;\n    height: 20px;\n    margin-top: 10px;\n    border-radius: 5px;\n`;","\nimport axios from \"axios\";\n\n\nexport async function sendOrder (reqBody) {\n    try {\n        const products = await axios.post(\"https://food-delivery-backend-project.herokuapp.com/accept-order\", reqBody);\n       return products\n    }\n    catch (error) {\n        return error.response\n    }\n}","import { OrderProducts, TotalResult } from 'components'\nimport { StyledForm, UserDataWrapper, StyledInput } from \"./OrderPage.styled\";\nimport { Formik } from 'formik'\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { sendOrder } from 'API/OrdersAPI'\nimport Notiflix from 'notiflix';\n\n\nexport default function OrderPage ({order, setOrder, onOrderInputChange}) {\n\n    const navigate = useNavigate();\n    const [total, setTotal] = useState(null);\n\n\n    function totalAmountCalculation (data) {\n        return data.reduce((count, item) => count += item.totalPrice, 0);\n    }\n    useEffect(() => {\n        totalAmountCalculation(order);\n        setTotal(totalAmountCalculation(order));\n    }, [order])\n\n    async function onFormSubmit ({userName, email, phone, adress}, {resetForm}) {\n   \n        const userData = {\n            name: userName,\n            email, \n            phone, \n            adress,\n            totalPrice: totalAmountCalculation(order),\n            userOrder: order,\n        } \n\n\n\n        try {\n            const response = await sendOrder(userData);\n\n            if (response.status === 200) {   \n                setOrder([]);\n                resetForm();\n                navigate(\"/order-confirm\")\n                return\n            } else {\n                throw new Error(response.data.message)\n            }\n\n            \n            \n        } catch (error) {\n            Notiflix.Notify.failure(`${error}`);\n        }\n        \n        \n    };\n\n\n    return (\n        <Formik initialValues={{userName:\"\", email:\"\", phone: \"\", adress: \"\"}} onSubmit={onFormSubmit}>\n            <StyledForm >\n                <div style={{display: \"flex\"}}>\n\n                <UserDataWrapper>\n\n                    <label>\n                        Name:\n                        <StyledInput type=\"text\" name=\"userName\"/>\n                    </label>\n\n                    <label>\n                        Email:\n                        <StyledInput type=\"email\" name=\"email\"/>\n                    </label>\n\n                    <label>\n                        Phone:\n                        <StyledInput type=\"tel\" name=\"phone\"/>\n                    </label>\n\n                    <label>\n                        Adress:\n                        <StyledInput type=\"text\" name=\"adress\"/>\n                    </label>\n\n                    </UserDataWrapper>\n\n                    <OrderProducts order={order} setOrder={setOrder} onOrderInputChange={onOrderInputChange}/>\n\n                    \n\n                </div>\n                \n                <TotalResult total={total}/>\n                    \n\n            </StyledForm>\n        </Formik>\n        \n    )\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n    padding: 30px 0;\n    background-color: #DADEDB;\n    max-width: 1400px;\n`;\nexport const Container = styled.div`\n    margin: 0 auto;\n    max-width: 1100px;\n    display: flex;\n    position: relative;\n`;\nexport const StyledLink = styled(Link)`\n    text-decoration: none;\n    color: white;\n`;\n","import styled from '@emotion/styled';\n\nexport const HeaderStyled = styled.header`\n    padding: 10px 0 20px 0;\n    background-color: #000;\n    \n`;\nexport const NavigationList = styled.ul`\n    display: flex;\n    width: 180px;\n    justify-content: space-between;\n    align-items: center;\n`;\nexport const NavigationItem = styled.li`\n    font-weight: 600;\n`;\nexport const NavigationDelimeter = styled.div`\n    height: 20px;\n    width: 1px;\n    background-color: white;\n    border: none;\n    position: absolute;\n    top: 0;\n    left: 55px;\n`;","import { HeaderStyled, NavigationList, NavigationItem, NavigationDelimeter } from \"./Header.styled\";\nimport { StyledLink, Container } from \"components\"\nexport const Header = () => {\n   return (\n    <>\n        <HeaderStyled>\n            <Container>\n                <nav>\n                    <NavigationList>\n\n                        <NavigationItem>\n                            <StyledLink to=\"/\">Shop</StyledLink>\n                        </NavigationItem>\n\n                        <NavigationItem>\n                            <StyledLink to=\"order\">Shopping Cart</StyledLink>\n                        </NavigationItem>\n                        \n                    </NavigationList>\n                    \n                    <NavigationDelimeter/>\n                </nav>\n            </Container>\n        </HeaderStyled>\n    </>\n   ) \n};","import styled from '@emotion/styled';\n\nexport const ShopList = styled.ul`\n    padding: 10px;\n    border-radius: 10px;\n    border: 1px solid black;\n    margin-right: 30px;\n`;\nexport const ShopListItem = styled.li`\n    margin-bottom: 30px;\n`;\n\nexport const ShopButton = styled.button`\n    width: 200px;\n    height: 50px;\n    border-radius: 7px;\n    background: white;\n    border: none;\n    &:hover {\n        background: #C8C4C5;\n    }\n`;","import { ShopButton, ShopListItem, ShopList } from \"./ShopsCollection.styled\";\n\n\nexport const ShopsCollection = ({storesData, setCurrentShop}) => {\n\nfunction onSelectedShop (event) {\n    const selectedShop = event.target.dataset.currentshop\n    setCurrentShop(selectedShop)\n}\n\n\n\n    return (\n\n            <ShopList>\n                {storesData !== null && storesData.map(item => {\n                    return (\n                        <ShopListItem key={item.shop}>\n                            <ShopButton type=\"button\" data-currentshop={item.shop} onClick={onSelectedShop}>{item.shop}</ShopButton>\n                        </ShopListItem>\n                    )\n                })}\n            </ShopList>\n\n    )\n}\n\n","import styled from '@emotion/styled';\nimport mainImg from '../../img/main-background.jpg';\n\nexport const ShopProductsWrapper = styled.div`\n    width: 100%;\n    height: 80vh;\n    background-image: url('https://food-delivery-backend-project.herokuapp.com/${props => props.image}');\n    border-radius: 10px;\n\n`;\nexport const SplashScreen = styled.div`\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-image: linear-gradient(rgba(0, 16, 56, 0.45), rgba(0, 16, 56, 0.45)), url('${mainImg}');\n    overflow: hidden;\n    border-radius: 10px;\n`;\nexport const ProductsLisWrapper = styled.div`\nbox-sizing: border-box;\nheight: 100%;\noverflow-y: scroll;\npadding: 10px;\n`;\nexport const ProductsList = styled.ul`\n    padding-left: 35px;\n    padding-right: 35px;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    \n`;\n\nexport const ProductsItem = styled.li`\n    border-radius: 10px;\n    overflow: hidden;\n    margin-bottom: 20px;\n`;\nexport const Description = styled.div`\n    padding: 0 10px 10px 10px;\n   display: flex;\n   justify-content: space-between;\n   background-color: rgba(255, 255, 255, 0.8);\n`;\nexport const TextWrapper = styled.div`\n   display: flex;\n   margin-top: 10px;\n`;\nexport const OrderButton = styled.button`\n    width: 100px;\n    height: 35px;\n    background: rgb(227, 6, 19);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n    border-radius: 5px;\n    border: none;\n    margin-top: 30px;\n`;\nexport const MealPrice = styled.span`\n    margin-left: 10px;\n    font-weight: 700;\n`;","import { SplashScreen, ShopProductsWrapper, ProductsLisWrapper, ProductsList, ProductsItem, OrderButton, Description, TextWrapper, MealPrice  } from \"./ShopProducts.styled\"\n\nexport const ShopProducts = ({productionData, orderCreator}) => {\n\n\n\n    return (\n        <ShopProductsWrapper image={productionData !== null && productionData.wallpaper}>\n            {productionData === null && <SplashScreen>\n                <h1>\n                    Select a store <br/>and view <br/>the list of its products\n                </h1>\n            </SplashScreen>}\n            {productionData !== null && \n            <ProductsLisWrapper>\n                <ProductsList>\n                    {\n                        productionData.products.map(({name, price, image, id}) => {\n                            return (\n                                <ProductsItem key={id}>\n                                    <img className=\"meal-image\" src={`https://food-delivery-backend-project.herokuapp.com//${image}`} alt=\"fast-food\" width=\"340\" height=\"220\"/>\n\n                                    <Description>\n                                        <TextWrapper>\n                                            <p className=\"meal-title\">{name}</p>\n                                            <MealPrice className=\"meal-price\">{price}$</MealPrice>\n                                        </TextWrapper>\n                                        <OrderButton onClick={() => {\n                                   \n                                            orderCreator({id, shop: productionData.shop, name, price, imageUrl: image})\n\n                                        }}>Add to card</OrderButton>\n                                    </Description>\n                                    \n                                </ProductsItem>\n                            )\n                        })\n                    }\n                </ProductsList>\n            </ProductsLisWrapper>}\n        </ShopProductsWrapper>\n        \n    )\n}","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\n\nexport const OrderList = styled.ul`\n    width: 100%;\n    background: #fff;\n    margin-left: 30px;\n    border: 1px solid black;\n    border-radius: 10px;\n    height: 70vh;\n    overflow-y: scroll;\n    padding: 10px;\n`;\nexport const OrderListItem = styled.li`\n    padding: 10px 0 20px 10px;\n    display: flex;\n    border: 1px solid black;\n    border-radius: 10px;\n    margin-bottom: 10px;\n    justify-content: space-between;\n    align-items: flex-end;\n    background-color: white;\n`;\nexport const DescritionWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n`;\nexport const ItemOrderTittle = styled.span`\n\n`;\nexport const ItemOrderCount = styled.span`\n    margin-top: 10px;\n`;\nexport const ItemOrderPrice = styled.span`\n    margin-top: 10px;\n`;\n\nexport const ValueInputWrapper = styled.div`\n    margin-top: 100px;\n    margin-right: 20px;\n    position: relative;\n`;\nexport const ValueInput = styled(Field)`\n    width: 100px;\n    height: 25px;\n    border: none;\n    border-radius: 5px;\n    text-align: center;\n    cursor: pointer;\n    border: 1px solid black;\n`;\n\nexport const ValueInputButtonSet = styled.div`\n    //border: 1px solid black;\n    width: 90px;\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    position: absolute;\n    top: 5px;\n    left: 8px;\n`;\nexport const ValueInputButton = styled.button`\n    width: 28px;\n    height: 18px;\n    border: none;\n    border-radius: 5px;\n    background: ${props => props.appointment === \"decrement\" ? \"rgb(227, 6, 19)\" : \"green\"};\n`;\nexport const RemoveItemBtn = styled.button`\n    border: none;\n    font-weight: bolder;\n    background: none;\n    color: rgb(227, 6, 19);\n    position: absolute;\n    top: -200px;\n    right: -10px;\n    transition: color 500ms ease;\n    &:hover {\n        color: rgb(168, 5, 14);\n    }\n`;","import { OrderList, RemoveItemBtn, OrderListItem, DescritionWrapper, ItemOrderTittle, ItemOrderPrice, ValueInputWrapper, ValueInput, ValueInputButtonSet, ValueInputButton} from \"./OrderProducts.styled\"\n\nexport const OrderProducts = ({order, setOrder, onOrderInputChange}) => {\n\n\n    return (\n        <>\n            \n            <OrderList>\n                {order && order.map(item => {\n                    return(\n                        <OrderListItem key={item.id}>\n                            \n                            <img src={`https://food-delivery-backend-project.herokuapp.com/${item.imageUrl}`} alt=\"fast-food\" width=\"340\" height=\"220\"/>\n                            <DescritionWrapper>\n                                <ItemOrderTittle>{item.name}</ItemOrderTittle>\n                                <ItemOrderPrice>Price: {item.totalPrice}$</ItemOrderPrice>\n                                <ValueInputWrapper>\n                                    <ValueInput \n                                        type=\"text\" \n                                        name={item.id} \n                                        value={item.count}\n                                    >\n                                        \n                                    </ValueInput>\n                                    <ValueInputButtonSet>\n                                        <ValueInputButton type=\"button\" appointment=\"increment\" onClick={() => {\n                                            onOrderInputChange(\"increment\", item.id)\n                                        }}>+</ValueInputButton>\n                                        {item.count > 1 && <ValueInputButton type=\"button\" appointment=\"decrement\" onClick={() => {\n                                            onOrderInputChange(\"decrement\", item.id)\n                                        }}>-</ValueInputButton>}\n                                        <RemoveItemBtn type=\"button\" onClick={() => {\n                                setOrder(order.filter(itemInOrder => itemInOrder.id !== item.id))\n                            }}>Remove</RemoveItemBtn>\n                                    </ValueInputButtonSet>\n                                    \n                                </ValueInputWrapper>\n                                \n                            </DescritionWrapper>\n                        </OrderListItem>\n                    )\n                })}\n            </OrderList>\n            \n        </>\n    )\n}","import styled from '@emotion/styled';\n\nexport const TotalResultWrapper = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-top: 10px;\n    padding-bottom: 10px;\n`;\nexport const ConfirmOrderButton = styled.button`\n    margin-left: 30px;\n    width: 150px;\n    height: 40px;\n    border: none;\n    border-radius: 5px;\n    background: rgb(227, 6, 19);\n    transition: background 500ms ease;\n    transition: color 500ms ease;\n    &:hover {\n        background: rgb(168, 5, 14);\n        color: white;\n    }\n`;","import {TotalResultWrapper, ConfirmOrderButton} from \"./TotalResult.style\"\n\nexport const TotalResult = ({total}) => {\n   \n    return (\n        <TotalResultWrapper>\n            <p>Total price: {total}$</p>\n            <ConfirmOrderButton type=\"submit\">Submit</ConfirmOrderButton>\n        </TotalResultWrapper>\n    )\n}","import styled from '@emotion/styled';\nimport confirmImg from \"../../img/acess-icon.png\"\n\n\nexport const ConfirmedOrderWrapper = styled.div`\n    width: 100%;\n    padding: 50px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-image: url('${confirmImg}');\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: contain;\n\n`;\nexport const ConfirmedTittle = styled.h2`\n    margin-bottom: 50px;\n`;\nexport const ConfirmedTextWrapper = styled.div`\n    display: flex;\n    width: 500px;\n    margin-bottom: 40px;\n`;\nexport const RelocationButton = styled.button`\n    border: none;\n    background: none;\n    font-weight: bolder;\n`;","import { ConfirmedOrderWrapper, ConfirmedTittle, ConfirmedTextWrapper, RelocationButton } from \"./ConfirmedOrder.styled\"\nimport { useNavigate } from \"react-router-dom\"\n\nexport const ConfirmedOrder = () => {\nconst navigate = useNavigate();\n\n\n\n\n\n    return (\n        <ConfirmedOrderWrapper>\n            <ConfirmedTittle>Your order is accepted</ConfirmedTittle>\n            <ConfirmedTextWrapper>\n                Lorem ipsum dolor sit amet consectetur adipisicing elit. Alias qui vel provident quisquam voluptas ex similique quia animi, aliquam ab a atque consectetur est ratione? Veniam, error nobis. Quae, laboriosam.\n            </ConfirmedTextWrapper>\n            <RelocationButton onClick={() => {\n                navigate(\"/\")\n            }}>Go to home page</RelocationButton>\n        </ConfirmedOrderWrapper>\n    )\n}"],"names":["StyledForm","styled","Form","UserDataWrapper","StyledInput","Field","sendOrder","reqBody","axios","products","response","OrderPage","order","setOrder","onOrderInputChange","navigate","useNavigate","useState","total","setTotal","totalAmountCalculation","data","reduce","count","item","totalPrice","userName","email","phone","adress","resetForm","userData","name","userOrder","status","Error","message","Notiflix","useEffect","initialValues","onSubmit","style","display","type","Section","Container","StyledLink","Link","HeaderStyled","NavigationList","NavigationItem","NavigationDelimeter","Header","to","ShopList","ShopListItem","ShopButton","ShopsCollection","storesData","setCurrentShop","onSelectedShop","event","selectedShop","target","dataset","currentshop","map","shop","onClick","ShopProductsWrapper","props","image","SplashScreen","mainImg","ProductsLisWrapper","ProductsList","ProductsItem","Description","TextWrapper","OrderButton","MealPrice","ShopProducts","productionData","orderCreator","wallpaper","price","id","className","src","alt","width","height","imageUrl","OrderList","OrderListItem","DescritionWrapper","ItemOrderTittle","ItemOrderPrice","ValueInputWrapper","ValueInput","ValueInputButtonSet","ValueInputButton","appointment","RemoveItemBtn","OrderProducts","value","filter","itemInOrder","TotalResultWrapper","ConfirmOrderButton","TotalResult","ConfirmedOrderWrapper","confirmImg","ConfirmedTittle","ConfirmedTextWrapper","RelocationButton","ConfirmedOrder"],"sourceRoot":""}